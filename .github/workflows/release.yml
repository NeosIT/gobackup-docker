name: Release new version
on:
  push:
    tags:
     - '*'

jobs:
  release:
    name: Release new Docker image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Get Git informatioon
      id: git_info
      shell: bash
      run: |
        GIT_TAG=${GITHUB_REF#refs/*/}
        # propagate to GH Actions
        echo ::set-output name=GIT_TAG::$GIT_TAG
        # extract tag from ${tag}(-${repo})?
        USED_TAG=${FULL_GIT_TAG%%-} 
        USED_FLAVOUR=${FULL_GIT_TAG#-}
        GOBACKUP_DIST_TAG=${USED_TAG}
        GOBACKUP_DIST_FLAVOUR=${USED_FLAVOUR:-huacnlee}

        echo "Used repository/version: $GOBACKUP_DIST_FLAVOUR/gobackup:$GOBACKUP_DIST_TAG"

        echo ::set-output name=GOBACKUP_DIST_FLAVOUR::$(echo GOBACKUP_DIST_TAG)
        echo ::set-output name=GOBACKUP_DIST_FLAVOUR::$(echo GOBACKUP_DIST_FLAVOUR)

    - name: Publish to Registry
      id: publish_to_registry
      uses: elgohr/Publish-Docker-Github-Action@master
      env:
        GOBACKUP_DIST_TAG: ${{ steps.git_info.outputs.GOBACKUP_DIST_TAG }}
        GOBACKUP_DIST_FLAVOUR: ${{ steps.git_info.outputs.GOBACKUP_DIST_FLAVOUR }}
      with:
        name: dreitier/gobackup
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
        tags: "${{ env.GOBACKUP_DIST_FLAVOUR }}-${{ env.GOBACKUP_DIST_TAG }}"
        buildargs: GOBACKUP_DIST_TAG,GOBACKUP_DIST_FLAVOUR